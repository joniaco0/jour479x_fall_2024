```{r}
library(tidyverse)
library(dplyr)
library(readr)
baseball <- read.csv("https://raw.githubusercontent.com/joniaco0/jour479x_fall_2024/refs/heads/main/data/WARdata.csv")
standings <- read.csv("https://raw.githubusercontent.com/joniaco0/jour479x_fall_2024/refs/heads/main/data/MLB_Data_with_Abbreviations%20-%20MLB_Data_with_Abbreviations.csv")
standings <- standings |> rename(Team = Tm)
standings
```
```{r}
merged_data <- baseball |>
  left_join(standings, by = c("Team", "Season"))
merged_data
```
```{r}
corrections <- merged_data |>
  mutate(Team = case_when(
    Team %in% c("FLA", "MIA") ~ "MIA",
    Team %in% c("ANA", "LAA") ~ "LAA",
    Team %in% c("TBR", "TBD") ~ "TBR",
    Team %in% c("WSN", "MON") ~ "WSN",
    TRUE ~ Team # Keep other teams unchanged
  ))
standings <- standings |>
  mutate(Team = case_when(
    Team %in% c("FLA", "MIA") ~ "MIA",
    Team %in% c("ANA", "LAA") ~ "LAA",
    Team %in% c("TBR", "TBD") ~ "TBR",
    Team %in% c("WSN", "MON") ~ "WSN",
    TRUE ~ Team # Keep other teams unchanged
  ))
maindata <- corrections |> select(Season, Name, PA, Team, WAR, pythW) |> mutate(WARSHARE = WAR/pythW)
maindata |> arrange(desc(WARSHARE))
```
```{r}
ggplot() +
geom_point(data = maindata, aes(x = pythW, y = WAR))
```
```{r}
team_total_war <- war_summary |>
  group_by(Team) |>
  summarize(Total_WAR = sum(Total_WAR), .groups = "drop") |>
  arrange(desc(Total_WAR))

war_summary <- war_summary |>
  mutate(Team = factor(Team, levels = team_total_war$Team))

# Plot the stacked bar chart
ggplot(war_summary, aes(x = Team, y = Total_WAR, fill = Season)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Total WAR by Team and Season",
    x = "Team",
    y = "Total WAR",
    fill = "Season"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
```{r}
library(dplyr)
library(ggplot2)
library(ggiraph)

# Process data
standings <- standings |>
  mutate(
    WinsAbove500 = pythW - 0.5 * (pythW + pythL) 
  ) |>
  arrange(Team, Season) |>
  group_by(Team) |>
  mutate(
    CumulativeWinsAbove500 = cumsum(WinsAbove500) 
  ) |>
  ungroup() |>
  filter(Season >= 2000) 

standings <- standings |>
  mutate(css_id = paste0("line-", Team))

gg <- ggplot(standings, aes(
  x = Season,
  y = CumulativeWinsAbove500,
  group = Team
)) +
  geom_line_interactive(
    aes(color = Team, tooltip = paste0("Team: ", Team, "<br>Season: ", Season, "<br>Cumulative Wins Above .500: ", CumulativeWinsAbove500), data_id = css_id),
    size = 1
  ) +
  labs(
    title = "Cumulative Wins Above .500 by Team (2000 Onwards)",
    x = "Season",
    y = "Cumulative Wins Above .500",
    color = "Team"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "bottom"
  )

# Custom CSS for hover effects
custom_css <- "
  .ggiraph-hover { 
    stroke-width: 3px; 
    opacity: 1; 
  }
  .ggiraph-active line {
    opacity: 0.2; /* Reduce opacity for non-hovered lines */
  }
  line:hover { 
    opacity: 1; 
    stroke-width: 3px; 
  }
"

# Convert ggplot to an interactive ggiraph object with custom CSS
interactive_plot <- girafe(ggobj = gg)
interactive_plot <- girafe_options(
  interactive_plot,
  opts_hover(css = custom_css),
  opts_hover_inv(css = "opacity: 0.2;")
)

# Print the interactive chart
interactive_plot


```

Here is the average WAR for each year. For simplicity sake, we will put it at two. 
```{r}
merged_data |> group_by(Season) |> summarize(mean(WAR))
```
```{r}
library(ggplot2)
library(ggiraph)
library(dplyr)

# Process data: Calculate WAR relative to 2 and cumulative values
filtered_data <- maindata |>
  filter(Season >= 2000) |>
  mutate(Relative_WAR = WAR - 2) |>
  group_by(Team, Season) |>
  summarize(
    Total_Relative_WAR = sum(Relative_WAR, na.rm = TRUE),
    .groups = "drop"
  ) |>
  arrange(Team, Season) |>
  group_by(Team) |>
  mutate(
    CumulativeRelativeWAR = cumsum(Total_Relative_WAR),
    css_id = paste0("line-", Team)
  ) |>
  ungroup()

# Identify Los Angeles Angels for special styling
filtered_data <- filtered_data |>
  mutate(
    Highlighted = ifelse(Team == "LAA", "Highlighted", "Normal")
  )

# Create the ggplot object
gg <- ggplot(filtered_data, aes(
  x = Season,
  y = CumulativeRelativeWAR,
  group = Team
)) +
  geom_line_interactive(
    aes(
      color = Highlighted,
      tooltip = paste0(
        "Team: ", Team, "<br>Season: ", Season, 
        "<br>Cumulative WAR Relative to 2: ", CumulativeRelativeWAR
      ),
      data_id = css_id
    ),
    size = ifelse(filtered_data$Team == "LAA", 1.5, 1) # Thicker line for Angels
  ) +
  scale_color_manual(
    values = c(
      "Highlighted" = "red", # Highlight LAA in red
      "Normal" = "gray"      # Other teams in gray
    )
  ) +
  labs(
    title = "Cumulative WAR Relative to 2 by Team (2000 Onwards)",
    x = "Season",
    y = "Cumulative Relative WAR",
    color = "Team"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "bottom"
  )

# Custom CSS for hover effects
custom_css <- "
  .ggiraph-hover { 
    stroke-width: 3px; 
    opacity: 1; 
  }
  .ggiraph-active line {
    opacity: 0.2; /* Reduce opacity for non-hovered lines */
  }
  line:hover { 
    opacity: 1; 
    stroke-width: 3px; 
  }
"

# Convert ggplot to an interactive ggiraph object with custom CSS
interactive_plot <- girafe(ggobj = gg)
interactive_plot <- girafe_options(
  interactive_plot,
  opts_hover(css = custom_css),
  opts_hover_inv(css = "opacity: 0.2;")
)

# Print the interactive chart
interactive_plot

```

